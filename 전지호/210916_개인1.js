//! 문제 설명
/*
    0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.

    예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 
    이중 가장 큰 수는 6210입니다.

    0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때,
    순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요.
*/

//! 제한 사항
//? 1. numbers의 길이는 1 이상 100,000 이하입니다.
//? 2. numbers의 원소는 0 이상 1,000 이하입니다.
//? 3. 정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.

function solution(numbers) {
  //? 1. 문제 이해
  /*
        처음에는 정렬을 확인하지 않고, 경우의 수를 이용해서 풀려했는데,
        정렬이 써져있는걸 보고 정렬을 이용해서 풀었다.
        string 형식으로 바꾸어서 합쳐진 두 수가 자릿수에 상관없이 큰 수가 큰 수이기 때문에
        정렬이 정상적으로 이루어져서 나오게 된다.
    */

  //? 2. 시간복잡도
  //* sort 함수는 O(n * logN)의 시간복잡도를 가지지만 join 메서드의 시간복잡도를 찾지 못하였다.

  //? 3. 개선점
  //* 음.. 경우의 수를 이용해서 푸는 것보다 이렇게 정렬을 이용해서 푸는게 훨씬 빠른것 같다. 개선할점은 딱히 없는듯하다.

  let str = numbers.map(String);
  let result = "";

  result = str
    .sort((a, b) => {
      return b + a - (a + b);
    })
    .join("");

  return result[0] === "0" ? "0" : result;
}

//! 입출력 예시
console.log(solution([6, 10, 2])); //* 결과: "6210"
console.log(solution([3, 30, 34, 5, 9])); //* 결과: "9534330"
